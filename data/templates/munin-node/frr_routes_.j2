#!/bin/bash
#
# munin plugin to show Quagga BGP prefix by IPv4 / IPv6
set -e

if [ "$1" = "autoconf" ]; then
    echo yes
    exit 0
fi

PROG=`echo "$0" | awk -F '/' '{print $NF}'`

AFI=`echo $PROG | awk -F '_' '{print $(NF-1)}'`
TYPE=`echo $PROG | awk -F '_' '{print $(NF)}'`

if [ "$1" = "config" ]; then
    echo "graph_title FRR BGP4 $AFI $TYPE prefixes"
    echo 'graph_args --base 1000 -l 0'
    echo 'graph_scale yes'
    echo "graph_vlabel Received $AFI $TYPE routes via BGP4"
    echo 'graph_category Network'
    for nb in `vtysh -c "show bgp $AFI sum" | grep ' 4 ' | awk '{print $1"-"$3}'`;
    do
        nb_idx=`echo $nb | awk -F '-' '{print $1}'|sed s/'\.'/'_'/g| sed s/':'/'_'/g`
        nb_ip=`echo $nb | awk -F '-' '{print $1}'`
        nb_as=`echo $nb | awk -F '-' '{print $2}'`
        echo "$nb_idx.label $nb_ip (AS$nb_as)"
    done;
#    echo 'total.colour 000000'
#    echo "total.label Total $TYPE Routes"
    echo "graph_info $AFI $TYPE Route information provided by vtysh (frr)"
    exit 0
fi

ROUTES=0
for nb in `vtysh -c "show bgp $AFI sum" | grep ' 4 ' | awk '{print $1"-"$(NF-2)"-"$(NF-1)}'`;
do
    nb_idx=`echo $nb | awk -F '-' '{print $1}'|sed s/'\.'/'_'/g| sed s/':'/'_'/g`
    nb_ip=`echo $nb | awk -F '-' '{print $1}'`
    nb_rec=`echo $nb | awk -F '-' '{print $2}'`
    nb_sent=`echo $nb | awk -F '-' '{print $NF}'`
    if [ "$TYPE" = 'valid' ];
    then
        c=$nb_rec
        echo "$nb_idx.value $c"
        ROUTES=$(($ROUTES+$c))
    fi;
#    if [ "$TYPE" = 'bestpath' ];
#    then
#        c=`vtysh -c "show bgp $AFI neighbors $nb_ip prefix-counts" | grep 'PfxCt Best Selected:' | awk '{print $NF}'`
#        echo "$nb_idx.value $c"
#        ROUTES=$(($ROUTES+$c))
#    fi;
#    if [ "$TYPE" = 'removed' ];
#    then
#        c=`vtysh -c "show bgp $AFI neighbors $nb_ip prefix-counts" | grep 'Removed:' | awk '{print $NF}'`
#        echo "$nb_idx.value $c"
#        ROUTES=$(($ROUTES+$c))
#    fi;
    if [ "$TYPE" = 'sent' ];
    then
        c=$nb_sent
        echo "$nb_idx.value $c"
        ROUTES=$(($ROUTES+$c))
    fi;
done;
#echo "total.value $ROUTES"
exit 0
